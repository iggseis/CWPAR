function waveformRecoveryFlag(fileIn,fileOut)
% This code is to restore the clipped waveform using the POCS method.
%
% fileIn : file name of the clipped  waveform as  input
% fileOut: file name of the restored waveform for output
% 
% Input:  1). "'MAJO10Z.txt'", which is the pure data of a clipped seismic
%             waveform, copied from the input file "*.SAC" or other file formats.
%             It is generated by "pickupPointsManually.m".
%         2). 'flagAllZ.txt', the flag for each sample, which is generated by the "pickupPointsManually".
%         3). 'thZ.txt',  the threhold for each sample, which is generated by the "pickupPointsManually".
%
%Output:  1). 'RestoreAmpBHZ.txt', the restored samples using POCS method.
%         2). 'MAJO-RestoreAmpBHZ.SAC',which is final output of restored waveform in *.SAC format.
%
% Last modified by Jinhai Zhang, Dec 26, 2016
%
% This code can be used for noncommercial purposes only. For commercial use, please contact Prof. Jinhai Zhang, zjh@mail.iggcas.ac.cn
%
% Please cite this code in terms of the related technical papers:
%
% Zhang, J. H. et al., 2016, Restoration of clipped seismic waveforms using projection onto convex sets method, Scientific Reports,6:39056, doi: 10.1038/srep39056
% Wang, S. Q. & Zhang, J. H. Fast image inpainting using exponential-threshold POCS plus conjugate gradient. Imaging. Sci. J. 62, 161¨C170 (2014).
%
% By using this software, you are agreeing to the terms detailed below.

% BEGIN TERMS OF USE LICENSE
%
% This SOFTWARE is maintained by the Seismology Group at the Institute
% of Geology and Geophysics, Chinese Academy of Sciences, Beijing,
% China.  The copyright and ownership is held by its 'AUTHOR'. 
% Please contact us via email at: zjh@mail.iggcas.ac.cn
%
% The term 'SOFTWARE' refers to the Matlab source code, translations to
% any other computer language, or object code
%
% Terms of use of this SOFTWARE
%
% 1) This SOFTWARE may be used by any individual or corporation for noncommercial purposes
%    with the exception of re-selling or re-distributing the SOFTWARE.
%
% 2) The AUTHORS should be acknowledged in any resulting publications or
%    presentations
%
% 3) This SOFTWARE is provided "as is" with no warranty of any kind
%    either expressed or implied. We make no warranties or representation
%    as to its accuracy, completeness, or fitness for any purpose. We
%    are under no obligation to provide support of any kind for this SOFTWARE.
%
% 4) New versions will be made available after leaving your email to zjh@mail.iggcas.ac.cn
%
% 5) Use this SOFTWARE at your own risk.
%
% END TERMS OF USE LICENSE

tr=importdata('MAJO10Z.txt'); %read in the seismic data, which is generated by the "pickupPointsManually"
flag0=importdata('flagAllZ.txt');%read in the flag data, which is generated by the "pickupPointsManually"
th0=importdata('thZ.txt');    %read in the threhold    , which is generated by the "pickupPointsManually"
[a,b]=find(flag0~=0);%find out the first non-zero sample
offset=150;%allow 150 samples left
nt=a(end)-a(1)+2*offset;%the total nulber of samples after extention with "offset"
itt=max(a(1)-offset,1); %the minimum index should be larger than 1
ite=itt+nt;             %the maximum index 

trr(1:nt,1)=tr(itt:ite-1);    %save the samples within the window to a new array "trr"
flag(1:nt,1)=flag0(itt:ite-1);%save the samples within the window to a new array "flag"
th(1:nt,1)=th0(itt:ite-1);    %save the samples within the window to a new array "th"
[endout]=RestoreSingleStatFlagLinearTH(trr,nt,th,flag);%restore the clipped waveform by a linear threshold with flag

tr(itt:ite-1)=endout(1:nt); %replace the input using the updated samples

plot(tr,'k');hold on;%plot restored waveform as a black curve
h = legend('input waveform','clipped waveform','threshold Tau','restored waveform');
% fid = fopen('RestoreAmpBHZ.txt','wt');%save the updated samples into "RestoreAmpBHZ.txt"
% for ii=1:size(tr,1)
%     fprintf(fid,'%f \n',tr(ii));
% end
% fclose(fid);

[seis,head]=readsac(fileIn,0,'l');%read in the original SAC file (which should be the same as that uesd in "pickupPointsManually") to 
head.E=size(tr,1)*head.DELTA+head.B;%update the ending time be the beginning time plus the total length of time duration, othewise, the total sample number of the SAC file would not be consistent with time duration 
head.NPTS=size(tr,1);%the total number of samples
writesac(tr,head,fileOut);%write to the SAC file "MAJO-RestoreAmpBHZ.SAC"